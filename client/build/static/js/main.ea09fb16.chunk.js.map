{"version":3,"sources":["components/deleteAlert.js","api/postDataToApi.js","components/posts.js","components/createPost.js","api/getDataFromApi.js","components/topics.js","assets/images/icon-left-font-monochrome-black.svg","assets/images/icon.svg","components/navbar.js","components/comments.js","components/modifyPost.js","components/singlePost.js","components/signup.js","components/login.js","components/account.js","app.js","hooks/useToken.js","index.js"],"names":["DeleteAlert","onClose","isOpen","deleteBtn","handleDelete","useState","alertMessage","setAlertMessage","cancelRef","useRef","useEffect","leastDestructiveRef","fontSize","fontWeight","ref","onClick","colorScheme","ml","postDataToApi","endpoint","id","method","authToken","data","setState","a","fetch","headers","body","JSON","stringify","response","json","responseData","ok","Error","statusText","console","log","Posts","post","userId","readPosts","setIsOpen","setDeleteBtn","useMediaQuery","windowSmallerThan520","postId","post_id","to","style","width","find","bg","p","borderColor","borderWidth","borderRadius","transition","opacity","_hover","boxShadow","m","maxW","justify","align","minHeight","marginBottom","lineHeight","topic_name","color","user_name","label","as","Box","size","display","user_id","event","preventDefault","Delete","post_title","noOfLines","post_body","window","location","CreatePost","topics","title","setTitle","text","setText","selectTopic","setSelectTopic","useDisclosure","onOpen","invalid","undefined","w","onSubmit","topic_id","isRequired","name","value","onFocus","type","placeholder","focusBorderColor","autoComplete","onChange","target","in","animateOpacity","marginTop","h","map","topic","disabled","getDataFromApi","authtoken","Topics","setPosts","setTopic","windowSmallerThan900","variant","border","Navbar","position","top","zIndex","src","LogoMobile","LogoDesktop","alt","spacing","minWidth","sessionStorage","removeItem","Comments","comment","modifyComment","setModifyComment","comment_body","commentText","setCommentText","setdeleteBtn","commentId","comment_id","pt","mb","Edit","handleDeleteBtn","reload","ModifyPost","singlePost","setModifyPost","postTitle","setPostTitle","postText","setPostText","handleSubmit","mt","SinglePost","setSinglePost","commentBody","setCommentBody","comments","setComments","modifyPost","useParams","justifyContent","ArrowBack","boxSize","Signup","email","setEmail","password","setPassword","username","setUsername","showPassword","setShowPassword","isInvalid","user","htmlFor","aria-describedby","RouterLink","LogIn","setToken","errorMsg","setErrorMsg","error","Account","userData","setUserData","textAlign","user_email","created_on","slice","App","setTopics","posts","setReadPosts","tokenString","getItem","parse","getToken","token","userToken","setItem","useToken","authentication","backgroundColor","height","paddingBottom","centerContent","exact","path","d","flex","marginLeft","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ea09fb16.chunk.js","sourcesContent":["import {\n  Button,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n} from \"@chakra-ui/react\"\nimport { useRef, useState, useEffect } from 'react';\n\nexport default function DeleteAlert({onClose, isOpen, deleteBtn, handleDelete}) {\n  const [alertMessage, setAlertMessage] = useState('');\n  const cancelRef = useRef()\n\n  \n  const changeAlertMessage = () => {\n    if (deleteBtn === 'post') {\n      setAlertMessage('Delete Post')\n    };\n    if (deleteBtn === 'comment') {\n      setAlertMessage('Delete Comment')\n    };\n    if (deleteBtn === 'account') {\n      setAlertMessage('Delete Account')\n    };\n  }\n\n  useEffect(() => {\n    changeAlertMessage();\n  });\n\n\n  return (\n    <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {alertMessage}\n            </AlertDialogHeader>\n            <AlertDialogBody>\n              Are you sure? You can't undo this action afterwards.\n            </AlertDialogBody>\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button\n                colorScheme=\"red\"\n                onClick={() => handleDelete()}\n                ml={3}\n              >\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n  )\n}","export default async function postDataToApi(endpoint, id, method, authToken, data, setState) {\n    try {\n      const response = await fetch((`http://localhost:5000/api/${endpoint}/${id}`), {\n        method: method,\n        headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${authToken}`},\n        body: JSON.stringify(data)\n      })\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      if (setState) {\n        setState(responseData)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n}","import {\n  Heading,\n  HStack,\n  Flex,\n  Container,\n  Text,\n  Badge,\n  Button,\n  Box,\n  Tooltip,\n  useMediaQuery\n} from \"@chakra-ui/react\"\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport DeleteAlert from './deleteAlert';\nimport postDataToApi from '../api/postDataToApi';\n\nexport default function Posts({post, authToken, userId, readPosts}) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [deleteBtn, setDeleteBtn] = useState('');\n  const [windowSmallerThan520] = useMediaQuery(\"(max-width: 520px)\")\n  const onClose = () => setIsOpen(false)\n  const postId = post.post_id;\n\n  const handlePostsRead = () => {\n    if (!readPosts.find(id => id.post_id === postId)) {\n      postDataToApi('posts', postId, 'POST', authToken, {userId});\n    }\n  };\n\n  const setOpacity = () => {\n    if (readPosts.find(id => id.post_id === postId)) {\n      return '0.6'\n    } else {\n      return '1'\n    }\n  };\n\n  const handleDeleteBtn = (event) => {\n    event.preventDefault();\n    setDeleteBtn('post');\n    setIsOpen(true);\n  };\n  \n  const handleDelete = () => {\n    if (deleteBtn === 'post') {\n      setIsOpen(false);\n      postDataToApi('posts', postId, 'DELETE', authToken, {userId});\n      window.location = '/';\n    }\n  };\n\n  return(\n    <>  \n      <Link\n        to={`/post/${post.post_id}`}\n        style={{width: '100%'}}\n        onClick={handlePostsRead}\n      >\n        <Flex\n          bg=\"white\"\n          p={0}\n          borderColor='#CBD5E0'\n          borderWidth='1px'\n          borderRadius='5px'\n          transition='0.4s'\n          opacity={setOpacity}\n          _hover={{\n            boxShadow:\"xl\"\n          }}\n        >\n          <Container\n            p={['12px 18px 18px 18px', '12px 24px 24px 24px']}\n            m={0} maxW='100%'\n          >\n            <Flex\n              justify='space-between'\n              align='center'\n              minHeight='32px'\n            >\n              <HStack marginBottom='4px' lineHeight='1.2rem'>\n                <Badge\n                  colorScheme='purple'\n                  fontSize={['0.55rem', '0.6rem']}\n                >\n                  {post.topic_name}\n                </Badge>\n                <Text color='grey' fontSize={['0.70rem', '0.75rem']}>\n                  {windowSmallerThan520 ? '' : 'Posted by: '}\n                  {post.user_name}\n                </Text>\n              </HStack>\n              <Tooltip label=\"Delete Post\" fontSize=\"xs\">\n                <Button\n                  as={Box}\n                  p={0}\n                  size={windowSmallerThan520 ? 'xs' : 'sm'}\n                  bg='transparent'\n                  display={userId !== post.user_id ? 'none' : 'flex'}\n                  onClick={handleDeleteBtn}\n                >\n                  <DeleteIcon color='red.600'/>\n                </Button>\n              </Tooltip>\n            </Flex>\n            <Heading\n              fontSize={['lg' ,'xl']}\n              fontWeight='500'\n              lineHeight='2.2rem'\n            > \n              {post.post_title} \n            </Heading>\n            <Text\n              fontSize={['sm', 'md']}\n              lineHeight='1.6rem'\n              noOfLines={[3, 3, 4]}\n            >\n              {post.post_body}\n            </Text>\n          </Container>\n        </Flex>\n      </Link>\n\n      <DeleteAlert\n        onClose={onClose}\n        isOpen={isOpen}\n        handleDelete={handleDelete}\n        deleteBtn={deleteBtn}\n        />\n    </>\n  )\n}","import {Box,\n  FormControl,\n  Input,\n  useDisclosure,\n  Collapse,\n  Textarea,\n  Button,\n  Select,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport postDataToApi from \"../api/postDataToApi\";\n\nexport default function CreatePost({topics, authToken, userId}) {\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [selectTopic, setSelectTopic] = useState();\n  const { isOpen, onOpen } = useDisclosure();\n  const invalid = title === '' || selectTopic === undefined;\n\n  const handleAddPost = (event) => {\n    event.preventDefault();\n    const post = {\n      user_id: userId,\n      topic_id: selectTopic,\n      title: title,\n      body: text\n    };\n    postDataToApi('posts', '', 'POST', authToken, post);\n    window.location = '/';\n    setTitle('');\n    setText('');\n  }\n\n  return(\n    <>\n        <Box\n          marginBottom={6}\n          bg=\"white\"\n          w=\"100%\"\n          p={4}\n          borderColor='#CBD5E0'\n          borderWidth='1px'\n          borderRadius='5px'\n          transition='0.3s'\n          _hover={{\n            boxShadow:\"xl\"\n          }}\n        >\n          <form method='POST' onSubmit={handleAddPost}>\n            <FormControl>\n              <Input\n                isRequired\n                id='postTitle'\n                name='title'\n                value={title}\n                onFocus={onOpen}\n                type='text'\n                placeholder={isOpen ? 'Title' : 'Create a new post here ...'}\n                fontSize={['sm', 'md']}\n                focusBorderColor=\"#E9D8FD\"\n                autoComplete='off'\n                onChange={({target}) => setTitle(target.value)}\n              />\n              <Collapse in={isOpen} animateOpacity>\n                <Textarea\n                  name='text'\n                  value={text}\n                  placeholder='Text (optional)'\n                  marginTop={4}\n                  marginBottom={2.5}\n                  h='130px'\n                  fontSize={['sm', 'md']}\n                  focusBorderColor=\"#E9D8FD\"\n                  borderWidth='1px'\n                  borderColor='gray.200'\n                  onChange={({target}) => setText(target.value)}\n                />\n                <Select\n                  placeholder='Select Topic'\n                  onChange={({target}) => setSelectTopic(target.value)}\n                  marginBottom={4}\n                  fontSize={['sm', 'md']}\n                >\n                  {topics.map((topic) => (\n                    <option\n                      key={topic.topic_id}\n                      value={topic.topic_id}\n                    >\n                      {topic.topic_name}\n                    </option>\n                  ))}\n                </Select>\n                <Button\n                  colorScheme='purple'\n                  type='submit'\n                  disabled={invalid}\n                  fontSize={['sm', 'md']}\n                  w='100%'\n                >\n                  Post</Button>\n              </Collapse>\n            </FormControl>\n          </form>\n        </Box>     \n    </>\n  )\n}","export default async function getDataFromApi(endpoint, id, authtoken, setState) {\n  if (authtoken) {\n    try {\n      const response = await fetch((`http://localhost:5000/api/${endpoint}/${id}`), {\n        headers: {'Authorization': `Bearer ${authtoken}`}\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      if (setState) {\n        setState(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n","import {\n  Button,\n  useMediaQuery\n} from \"@chakra-ui/react\"\nimport { useState } from \"react\";\nimport getDataFromApi from '../api/getDataFromApi';\nimport postDataToApi from '../api/postDataToApi';\n\n\nexport default function Topics({topics, setPosts, authToken}) {\n  const [topic, setTopic ] = useState();\n  const [windowSmallerThan900] = useMediaQuery(\"(max-width: 900px)\")\n\n  const handleSetTopic = (event) => {\n    event.preventDefault();\n    const topicID = {\n      topic_id: topic\n    }\n    postDataToApi('topics', '', 'POST', authToken, topicID, setPosts)\n  }\n\n  const handleShowAll = () => {\n    getDataFromApi('posts', '', authToken, setPosts);\n  }\n\n  return(\n    <>\n      <Button\n        type='button'\n        bg=\"white\"\n        fontWeight='normal'\n        fontSize={windowSmallerThan900 ? 'sm' : 'md'}\n        variant='outline'\n        w=\"100%\"\n        h='48px'\n        p={4}\n        colorScheme='purple'\n        color='black'\n        borderRadius='5px'\n        border=\"2px\"\n        borderColor=\"purple.400\"\n        marginBottom={2}\n        onClick={handleShowAll}\n        _hover={{\n          boxShadow: 'lg',\n          color: 'purple.600'\n        }}\n      >\n            Show All\n      </Button>\n      <form onSubmit={handleSetTopic} >\n        {topics.map((topic) => (\n          <Button\n            type='submit'\n            key={topic.topic_id}\n            value={topic.topic_id}\n            bg=\"white\"\n            fontWeight='normal'\n            fontSize={windowSmallerThan900 ? 'sm' : 'md'}\n            variant='outline'\n            w='100%'\n            h='48px'\n            p={4}\n            colorScheme='purple'\n            color='black'\n            borderRadius='5px'\n            border=\"2px\"\n            borderColor=\"purple.400\"\n            marginBottom={2}\n            _hover={{\n              boxShadow: 'lg',\n              color: 'purple.600'\n            }}\n            onClick={({target}) => setTopic(target.value)}\n          >\n          {topic.topic_name}\n          </Button>\n        ))}\n      </form> \n    </>\n  )\n}","export default __webpack_public_path__ + \"static/media/icon-left-font-monochrome-black.19aa0a7c.svg\";","export default __webpack_public_path__ + \"static/media/icon.df011b71.svg\";","import {\n  Box,\n  Flex,\n  Button,\n  HStack,\n  Image,\n  useMediaQuery\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport LogoDesktop from \"../assets/images/icon-left-font-monochrome-black.svg\";\nimport LogoMobile from \"../assets/images/icon.svg\";\n\nexport default function Navbar() {\n  const [windowSmallerThan520] = useMediaQuery(\"(max-width: 520px)\")\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('token');\n    window.location = '/';\n  }\n\n  return (\n    <Box\n      position=\"sticky\"\n      top={0}\n      p={[4, 6]}\n      bg=\"gray.100\"\n      zIndex={1}\n    >\n      <Flex\n        justify=\"space-between\"\n        align='center'\n        w=\"100%\"\n        position=\"sticky\"\n        top={0}\n      >\n        <Image\n          h='36px'\n          src={windowSmallerThan520 ? LogoMobile : LogoDesktop}\n          alt=\"Groupomania Logo\"\n        />\n\n        <HStack spacing={4}>\n          <Link to='/account'>\n            <Button\n              as={Box}\n              minWidth='95px'\n              colorScheme=\"purple\"\n              fontSize={['sm', 'md']}\n            >\n              Account\n            </Button>\n          </Link>\n          <Button\n            minWidth='95px'\n            colorScheme=\"purple\"\n            fontSize={['sm', 'md']}\n            onClick={() => handleLogout()}\n          >\n            Logout\n          </Button>\n        </HStack>\n        \n      </Flex>\n    </Box>\n  )\n}","import {\n  Box,\n  Text,\n  VStack,\n  HStack,\n  Flex,\n  Button,\n  Tooltip,\n  Textarea,\n  useMediaQuery\n} from \"@chakra-ui/react\"\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport DeleteAlert from './deleteAlert';\nimport postDataToApi from '../api/postDataToApi';\n\nexport default function Comments({comment, userId, authToken}) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modifyComment, setModifyComment] = useState(false);\n  const [commentText, setCommentText] = useState(comment.comment_body);\n  const [deleteBtn, setdeleteBtn] = useState('');\n  const [windowSmallerThan520] = useMediaQuery(\"(max-width: 520px)\")\n  const onClose = () => setIsOpen(false)\n  const commentId = comment.comment_id;\n\n  const handleDeleteBtn = (event) => {\n    event.preventDefault();\n    setdeleteBtn('comment');\n    setIsOpen(true);\n  };\n\n  const handleDelete = () => {\n    if (deleteBtn === 'comment') {\n      setIsOpen(false);\n      postDataToApi('comments', '', 'DELETE', authToken, {commentId});\n      window.location.reload();\n    }\n  }\n\n  const handleUpdateComment = () => {\n    const comment = {\n      commentId,\n      body: commentText\n    }\n    postDataToApi('comments', '', 'PUT', authToken, comment);\n  }\n \n  return (\n    <>\n      <Box\n        key={comment.comment_id}\n        style={{width: '100%'}} \n        bg=\"white\"\n        marginTop={12}\n        p={4}\n        pt={2}\n        borderColor='#CBD5E0'\n        borderWidth='1px'\n        borderRadius='5px'\n      >\n        <Flex\n          justify='space-between'\n          align='center'\n          mb={2}\n        >\n          <Text\n            color='grey'\n            fontSize={['0.70rem', '0.75rem']}\n          >\n            {windowSmallerThan520 ? '' : 'Posted by: '}\n            {comment.user_name}\n          </Text>\n\n          <HStack>\n            <Tooltip label=\"Modify Comment\" fontSize=\"xs\">\n              <Button\n                p={0}\n                size={windowSmallerThan520 ? 'xs' : 'sm'}\n                bg='transparent'\n                display={userId !== comment.user_id ? 'none' : 'block'}\n                onClick={modifyComment === false ? () => setModifyComment(true) : () => setModifyComment(false)}\n              >\n                <EditIcon color='purple.500'/>\n              </Button>\n            </Tooltip>\n            <Tooltip label=\"Delete Comment\" fontSize=\"xs\">\n              <Button\n                bg='none'\n                p={0}\n                size={windowSmallerThan520 ? 'xs' : 'sm'}\n                display={userId !== comment.user_id ? 'none' : 'block'}\n                onClick={(event) => handleDeleteBtn(event)}\n              >\n                <DeleteIcon color='red.600'/>\n              </Button>\n            </Tooltip>\n          </HStack>\n        </Flex>\n\n        {modifyComment === false && (\n          <Text fontSize={['sm', 'md']}> {comment.comment_body} </Text>\n        )}\n\n        {modifyComment === true && (\n          <form method='PUT' onSubmit={() => handleUpdateComment()}>\n            <Textarea\n              value={commentText}\n              placeholder='Text'\n              fontSize={['sm', 'md']}\n              focusBorderColor=\"#E9D8FD\"\n              borderWidth='1px'\n              borderColor='gray.200'\n              marginBottom={2.5}\n              onChange={({target}) => setCommentText(target.value)}\n            />\n\n            <VStack spacing={4}>\n              <Button\n                colorScheme='purple'\n                type='submit'\n                w='100%'\n                fontSize={['sm', 'md']}\n              >\n                Update\n              </Button>\n              <Button\n                type='button'\n                w='100%'\n                fontSize={['sm', 'md']}\n                onClick={() => setModifyComment(false)}\n              >\n                Cancel\n              </Button>\n            </VStack>\n          </form>\n        )}\n      </Box>\n\n      <DeleteAlert\n        onClose={onClose}\n        isOpen={isOpen}\n        handleDelete={handleDelete}\n        deleteBtn={deleteBtn}\n      />\n    </>\n  )\n}","import {\n  FormControl,\n  Textarea,\n  Button,\n  VStack,\n  Input,\n  Select,\n  useMediaQuery\n} from \"@chakra-ui/react\"\nimport { useState } from 'react';\nimport postDataToApi from '../api/postDataToApi';\n\nexport default function ModifyPost({singlePost, topics, authToken, id, setModifyPost}) {\n  const [postTitle, setPostTitle] = useState(singlePost.post_title);\n  const [postText, setPostText] = useState(singlePost.post_body);\n  const [selectTopic, setSelectTopic] = useState();\n  const [windowSmallerThan520] = useMediaQuery(\"(max-width: 520px)\")\n\n  const handleSubmit = async () => {\n    const post = {\n      topic_id: selectTopic ? selectTopic : singlePost.topic_id,\n      title: postTitle,\n      body: postText\n    };\n    postDataToApi('posts', id, 'PUT', authToken, post);\n  }\n\n  return (\n    <form method='PUT' onSubmit={() => handleSubmit()}>\n      <FormControl mt={2}>\n        <Input\n          isRequired\n          id='postTitle'\n          name='title'\n          value={postTitle}\n          placeholder='Title'\n          type='text'\n          fontSize={['sm', 'md']}\n          focusBorderColor=\"#E9D8FD\"\n          autoComplete='off'\n          onChange={({target}) => setPostTitle(target.value)}\n        />\n        <Textarea\n          name='text'\n          value={postText}\n          placeholder='Text (optional)'\n          marginTop={4}\n          marginBottom={2.5}\n          h={windowSmallerThan520 ? '160px' : '260px'}\n          fontSize={['sm', 'md']}\n          focusBorderColor=\"#E9D8FD\"\n          borderWidth='1px'\n          borderColor='gray.200'\n          onChange={({target}) => setPostText(target.value)}\n        />\n        <Select\n          placeholder='Select Topic'\n          onChange={({target}) => setSelectTopic(target.value)}\n          marginBottom={4}\n          fontSize={['sm', 'md']}\n        >\n          {topics.map((topic) => (\n            <option\n              key={topic.topic_id}\n              value={topic.topic_id}\n            >\n              {topic.topic_name}\n            </option>\n          ))}\n        </Select>\n        <VStack spacing={4}>\n          <Button\n            colorScheme='purple'\n            w='100%'\n            type='submit'\n            fontSize={['sm', 'md']}\n          >\n            Post\n          </Button>\n          <Button\n            type='button'\n            w='100%'\n            fontSize={['sm', 'md']}\n            onClick={() => setModifyPost(false)}\n          >\n            Cancel\n          </Button>\n        </VStack>\n      </FormControl>\n    </form>\n  )\n}","import {\n  Box,\n  Heading,\n  FormControl,\n  Textarea,\n  Button,\n  HStack,\n  Text,\n  Badge,\n  VStack,\n  Tooltip,\n  Flex,\n  useMediaQuery\n } from \"@chakra-ui/react\"\n import { DeleteIcon, EditIcon, ArrowBackIcon } from '@chakra-ui/icons';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport Comments from './comments';\nimport DeleteAlert from './deleteAlert';\nimport ModifyPost from './modifyPost';\nimport getDataFromApi from '../api/getDataFromApi';\nimport postDataToApi from '../api/postDataToApi';\n\nexport default function SinglePost({authToken, userId, topics}) {\n  const [singlePost, setSinglePost] = useState({});\n  const [commentBody, setCommentBody] = useState('');\n  const [comments, setComments] = useState([]);\n  const [modifyPost, setModifyPost] = useState(false);\n  const [isOpen, setIsOpen] = useState(false)\n  const [deleteBtn, setdeleteBtn] = useState('');\n  const [windowSmallerThan520] = useMediaQuery(\"(max-width: 520px)\")\n  const {id} = useParams();\n  const onClose = () => setIsOpen(false)\n  \n  const handleDeleteBtn = (event) => {\n    event.preventDefault();\n    setdeleteBtn('post');\n    setIsOpen(true);\n  };\n\n  const handleDelete = () => {\n    if (deleteBtn === 'post') {\n      setIsOpen(false);\n      postDataToApi('posts', id, 'DELETE', authToken, {userId});\n      window.location = '/';\n    }\n  }\n\n  const handleAddComment = (event) => {\n    event.preventDefault();\n    const comment = {\n      user_id: userId,\n      post_id: id,\n      body: commentBody\n    };\n    postDataToApi('comments', '', 'POST', authToken, comment);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    getDataFromApi('posts', id, authToken, setSinglePost);\n    getDataFromApi('comments', id, authToken, setComments);\n  }, [id, authToken] );\n\n  return (\n    <>\n      <Box\n        maxW=\"container.md\"\n        bg=\"white\"\n        w=\"100%\"\n        p={[3, 4]}\n        pt={4}\n        borderColor='#CBD5E0'\n        borderWidth='1px'\n        borderRadius='5px'\n      >\n        <Flex justifyContent='space-between'>\n          <HStack marginBottom='4px' lineHeight='1.2rem'>\n            <Tooltip label='Go back' fontSize='xs'>\n              <Button\n                  p={0}\n                  size={windowSmallerThan520 ? 'xs' : 'sm'}\n                  bg='transparent'\n                  onClick={() => window.location = '/'}\n                >\n                <ArrowBackIcon boxSize='1.3em'/>\n              </Button>\n            </Tooltip>\n            <Badge\n              colorScheme='purple'\n              fontSize={['0.55rem', '0.6rem']}\n            >\n              {singlePost.topic_name}\n            </Badge>\n            <Text color='grey' fontSize={['0.70rem', '0.75rem']}>\n            {windowSmallerThan520 ? '' : 'Posted by: '}\n            {singlePost.user_name}\n            </Text>\n          </HStack>\n          <HStack marginBottom='4px' lineHeight='1.2rem'>\n            <Tooltip label=\"Modify Post\" fontSize=\"xs\">\n              <Button\n                p={0}\n                size={windowSmallerThan520 ? 'xs' : 'sm'}\n                bg='transparent'\n                display={userId !== singlePost.user_id ? 'none' : 'flex'}\n                onClick={modifyPost === false ? () => setModifyPost(true) : () => setModifyPost(false)}\n              >\n                <EditIcon color='purple.500'/>\n              </Button>\n            </Tooltip>\n            <Tooltip label=\"Delete Post\" fontSize=\"xs\">\n              <Button\n                bg='none'\n                p={0}\n                size={windowSmallerThan520 ? 'xs' : 'sm'}\n                display={userId !== singlePost.user_id ? 'none' : 'flex'}\n                onClick={(event) => handleDeleteBtn(event)}\n              >\n                <DeleteIcon color='red.600'/>\n              </Button>\n            </Tooltip>\n          </HStack>\n        </Flex>\n\n        {modifyPost === true && (\n          <ModifyPost\n            singlePost={singlePost}\n            topics={topics}\n            setModifyPost={setModifyPost}\n            authToken={authToken}\n            id={id}\n          />\n        )}\n\n        {modifyPost === false && (\n          <>\n            <Heading\n              fontSize={['lg' ,'xl']}\n              fontWeight='500'\n              lineHeight='2.2rem'\n            >\n              {singlePost.post_title}\n            </Heading>\n            <Text\n              lineHeight='1.6rem'\n              fontSize={['sm', 'md']}\n            >\n              {singlePost.post_body}\n            </Text>\n            <form method='POST' onSubmit={handleAddComment}>\n              <FormControl marginTop={10}>\n                <Textarea\n                  isRequired\n                  name='comment'\n                  value={commentBody}\n                  type='text'\n                  fontSize={['sm', 'md']}\n                  placeholder='Add a comment...'\n                  focusBorderColor=\"#E9D8FD\"\n                  autoComplete='off'\n                  h='130px'\n                  marginBottom={4}\n                  onChange={({target}) => setCommentBody(target.value)}\n                />\n                <Button\n                  type='submit'\n                  disabled={commentBody === ''}\n                  w='100%'\n                  fontSize={['sm', 'md']}\n                  colorScheme='purple'\n                >\n                  Comment\n                </Button>\n              </FormControl>\n            </form>\n          </>\n        )}\n\n        <VStack spacing={6}>\n          {comments.map((comment) => (\n            <Comments\n              key={comment.comment_id}\n              comment={comment}\n              userId={userId}\n              authToken={authToken}  \n            />\n          ))}\n        </VStack>\n\n        <DeleteAlert\n          onClose={onClose}\n          isOpen={isOpen}\n          handleDelete={handleDelete}\n          deleteBtn={deleteBtn}\n        />\n\n      </Box>\n    </>\n  )\n};","import {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Input,\n  InputGroup,\n  InputRightElement,\n  VStack,\n  Center,\n  Link\n} from \"@chakra-ui/react\";\nimport { useState } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\n\nexport default function Signup() {\n  const  [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ username, setUsername ] = useState('');\n  const [ showPassword, setShowPassword ] = useState(false);\n  const isInvalid = password === '' || email === '';\n  \n  async function handleSignUp(event) {\n    event.preventDefault();\n    try {\n      const user = {\n        username,\n        email,\n        password\n      }\n      const response = await fetch(('http://localhost:5000/api/auth/signup'), {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(user)\n      })\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      window.location = '/';\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return(\n    <>\n      <Center h='100vh' p={4}>\n        <Container maxW='md' bg=\"white\" p={[4, 8]} borderRadius='5px'>\n          <form method='POST' onSubmit={handleSignUp}>\n            <VStack spacing={6}>\n              <FormControl isRequired>\n                <FormLabel htmlFor='username'>User Name</FormLabel>\n                <Input\n                  type='text'\n                  id='username'\n                  value={username}\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n              </FormControl>\n              <FormControl isRequired>\n                <FormLabel htmlFor='email'>Email Address</FormLabel>\n                <Input\n                  type='email'\n                  id='email'\n                  aria-describedby='email-helper-text'\n                  value={email}\n                  onChange={({ target }) => setEmail(target.value)}\n                />\n                <FormHelperText id='email-helper-text'>\n                  Please use your internal email address.\n                </FormHelperText>\n              </FormControl>\n              <FormControl isRequired>\n                <FormLabel htmlFor='password'>Password</FormLabel>\n                <InputGroup>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    id='password'\n                    autoComplete='off'\n                    value={password}\n                    onChange={({ target }) => setPassword(target.value)}\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button\n                      h=\"1.75rem\"\n                      size=\"sm\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                type='submit'\n                disabled={isInvalid}\n                colorScheme=\"purple\"\n                variant=\"solid\"\n                w='100%'\n                > \n                  Submit\n              </Button>\n              <Link as={RouterLink} to='/' color='purple.400'>\n                Already have an account?\n              </Link>\n            </VStack>\n          </form>\n        </Container>\n      </Center>\n    </>\n  );\n};","import {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  VStack,\n  Center,\n  Link,\n  Text\n} from \"@chakra-ui/react\";\nimport { useState } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\n\nexport default function LogIn({setToken}) {\n  const  [ username, setUsername ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [ showPassword, setShowPassword ] = useState(false);\n  const isInvalid = password === '' || username === '';\n  \n  async function handleLogin(event) {\n    event.preventDefault();\n    try {\n      const user = {\n        username,\n        password\n      }\n      const response = await fetch(('http://localhost:5000/api/auth/login'), {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(user)\n      })\n      const data = await response.json();\n      \n      if (data.error) {\n        setErrorMsg(data.error);\n      }\n\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      setToken(data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return(\n    <>\n      <Center h='100vh' p={4}>\n        <Container maxW='md' bg=\"white\" p={[4, 8]} borderRadius='5px'>\n          <form method='POST' onSubmit={handleLogin}>\n            <VStack spacing={6}>\n              <Text color='red' display={errorMsg ? 'block' : 'none'}>{errorMsg}</Text>\n              <FormControl isRequired>\n                <FormLabel htmlFor='username'>User Name</FormLabel>\n                <Input\n                  type='text'\n                  id='username'\n                  value={username}\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n              </FormControl>\n              <FormControl isRequired>\n                <FormLabel htmlFor='password'>Password</FormLabel>\n                <InputGroup>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    id='password'\n                    autoComplete='off'\n                    value={password}\n                    onChange={({ target }) => setPassword(target.value)}\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button\n                      h=\"1.75rem\"\n                      size=\"sm\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                type='submit'\n                disabled={isInvalid}\n                colorScheme=\"purple\"\n                variant=\"solid\"\n                w='100%'\n              > \n                  Login\n              </Button>\n              <Link as={RouterLink} to='/signup' color='purple.400'>\n                Don't have an account?\n              </Link>\n            </VStack>\n          </form>\n        </Container>\n      </Center>\n    </>\n  );\n};","import {\n  Container,\n  Heading,\n  Text,\n  Tooltip,\n  Button,\n  Avatar,\n  VStack\n} from \"@chakra-ui/react\";\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { useState, useEffect } from 'react';\nimport postDataToApi from '../api/postDataToApi';\nimport DeleteAlert from './deleteAlert';\n\nexport default function Account({userId, authToken}) {\n  const [userData, setUserData] = useState({});\n  const [isOpen, setIsOpen] = useState(false)\n  const [deleteBtn, setdeleteBtn] = useState('');\n  const onClose = () => setIsOpen(false)\n\n  const handleDeleteBtn = (event) => {\n    event.preventDefault();\n    setdeleteBtn('account');\n    setIsOpen(true);\n  };\n\n  const handleDelete = () => {\n    if (deleteBtn === 'account') {\n      postDataToApi('auth', '', 'DELETE', authToken, {userId});\n      sessionStorage.removeItem('token');\n      window.location = '/';\n    }\n  }\n\n  useEffect(() => {\n    postDataToApi('auth', '', 'POST', authToken, {userId}, setUserData);\n  }, [userId, authToken] );\n\n  return (\n    <Container\n      maxW=\"container.md\"\n      m={0}\n      bg=\"white\"\n      w=\"100%\"\n      p={6}\n      borderColor='#CBD5E0'\n      borderWidth='1px'\n      borderRadius='5px'\n    >\n      <Container m={0} p={0} maxW='100%'>\n        <Tooltip label='Go back' fontSize='xs'>\n          <Button\n              p={0}\n              size='sm'\n              bg='transparent'\n              onClick={() => window.location = '/'}\n            >\n            <ArrowBackIcon boxSize='1.3em'/>\n          </Button>\n        </Tooltip>\n      </Container>\n\n      <Container\n        m={0}\n        p={0}\n        maxW='100%'\n        textAlign='center'\n        lineHeight='20px'\n      >\n        <VStack spacing={4}>\n          <Avatar name={userData[0]?.user_name} size='2xl'/>\n          <Heading fontSize={['lg' ,'xl']}>\n            {userData[0]?.user_name}\n          </Heading>\n          <Text fontSize={['sm', 'md']}>\n            {userData[0]?.user_email}\n          </Text>\n          <Text fontSize={['sm', 'md']}>\n            Created on: {userData[0]?.created_on.slice(0, 10)}\n          </Text>\n          <Button\n            colorScheme=\"red\"\n            fontSize={['sm', 'md']}\n            onClick={handleDeleteBtn}\n          >\n            Delete Account\n          </Button>\n        </VStack>\n      </Container>\n      \n      <DeleteAlert\n        onClose={onClose}\n        isOpen={isOpen}\n        handleDelete={handleDelete}\n        deleteBtn={deleteBtn}\n      />\n    </Container>\n  )\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Container, VStack } from \"@chakra-ui/react\";\nimport { useState, useEffect } from 'react';\nimport Posts from './components/posts';\nimport CreatePost from './components/createPost';\nimport Topics from './components/topics';\nimport Navbar from './components/navbar';\nimport SinglePost from \"./components/singlePost\";\nimport Signup from './components/signup';\nimport LogIn from './components/login';\nimport useToken from './hooks/useToken';\nimport Account from './components/account';\nimport getDataFromApi from './api/getDataFromApi';\n\nexport default function App() {\n  const [topics, setTopics] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [readPosts, setReadPosts] = useState([]);\n  // Using custom hook to get/save token from/to Sessionstorage\n  const {token, setToken} = useToken();\n  // Using JWT for request authorization\n  const authToken = token?.authentication;\n  const userId = token?.userId;\n\n  // Get all posts + topics & set read posts on first render\n  useEffect(() => {\n    getDataFromApi('posts', '', authToken, setPosts);\n    getDataFromApi('topics', '', authToken, setTopics);\n    getDataFromApi('posts/postsread', userId, authToken, setReadPosts);\n  }, [authToken, userId] );\n\n  if (!token) {\n    return (\n      <div style={{\n        backgroundColor:'#dbdae8',\n        minHeight: '100vh',\n        height: '100%'\n        }}\n      >\n        <Router>\n          <Switch>\n            <Route exact path='/'>\n              <LogIn setToken={setToken}/>\n            </Route>\n            <Route exact path='/signup'>\n              <Signup />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n\n  return (\n    <Router>\n      <Navbar />\n      <Container \n        backgroundColor='#dbdae8'\n        minHeight='100vh'\n        height='100%'\n        p={[3, 6]}\n        paddingBottom='20px'\n        maxW='100%'\n        m={0}\n        centerContent\n      >\n        <Switch>\n          <Route exact path='/'>\n            <Container maxW=\"container.lg\" d='flex' p={0}>\n              <Container maxW=\"container.md\" p={0} m={0}>\n                <CreatePost\n                  topics={topics}\n                  authToken={authToken}\n                  userId={userId}\n                />\n                <VStack spacing={6}>\n                  {posts.map((post) => (\n                    <Posts\n                      post={post}\n                      authToken={authToken}\n                      setPosts={setPosts}\n                      userId={userId}\n                      readPosts={readPosts}\n                      key={post.post_id}\n                    />\n                  ))}\n                </VStack>\n              </Container>\n              <Container\n                flex='1'\n                p={0}\n                display={['none', 'none', 'block']}\n                marginLeft={4}\n              >\n                <Topics\n                  topics={topics}\n                  setPosts={setPosts}\n                  authToken={authToken}\n                />\n              </Container>\n            </Container>\n          </Route>\n\n          <Route exact path={'/post/:id'} render={() => (\n            <SinglePost\n              authToken={authToken}\n              userId={userId}\n              topics={topics}\n            />\n          )}/>\n\n          <Route exact path='/account' render={() => (\n            <Account\n              userId={userId}\n              authToken={authToken}\n            />\n          )}/>\n        </Switch>\n      </Container>\n    </Router>\n  );\n};","import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken\n  };\n\n  const [token, setToken] = useState(getToken());\n  \n  const saveToken = userToken => {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken);\n  };\n\n  return {\n    token: token,\n    setToken: saveToken\n  }\n}","import { ChakraProvider } from \"@chakra-ui/react\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}